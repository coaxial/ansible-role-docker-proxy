---
- name: Start nginx-proxy
  docker_container:
    image: nginx
    name: nginx-proxy
    env:
      ENABLE_IPV6: "{{ dp__ipv6_enable }}"
    volumes: "{{ _dp__np_volumes }}"
    ports: "{{ _dp__np_ports }}"
    restart_policy: always
    networks:
      - name: "{{ dp__network_name }}"

- name: Start nginx-gen
  docker_container:
    image: jwilder/docker-gen
    name: nginx-gen
    restart_policy: always
    volumes:
      - /opt/nginx-proxy/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    volumes_from:
      - nginx-proxy
    networks:
      - name: "{{ dp__network_name }}"
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  when: dp__le_enable and not dp__testing

- name: Start LE container
  docker_container:
    image: jrcs/letsencrypt-nginx-proxy-companion
    name: nginx-le
    restart_policy: always
    env:
      NGINX_DOCKER_GEN_CONTAINER: nginx-gen
      NGINX_PROXY_CONTAINER: nginx-proxy
    volumes:
      - ssl_certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx-proxy
  when: dp__le_enable and not dp__testing

- name: Wait for LE companion to generate DH parameters (takes a long time, several minutes)
  wait_for:
    timeout: "{{ dp__le_timeout }}"
  when: dp__le_enable and not dp__testing

- name: Recreate upstream services with extended config
  docker_service:
    project_src: "{{ item.project_src }}"
    services: "{{ item.svc_name }}"
    files:
      - "{{ item.doco | default('docker-compose.yml')}}"
      - docker-compose.proxy.yml
    # attach to new upstreams network
    recreate: always
  with_items: "{{ dp__upstream }}"
