---
- name: Get docker bridge network gateway
  command: "{% raw -%}docker network inspect bridge --format '{{range .IPAM.Config}}{{.Gateway}}{{end}}'{% endraw -%}"
  changed_when: false
  register: _dp__docker_gw_ip

- name: Create directory for nginx config files if needed
  # will only create the dir if there is a non-containerized upstream service
  # defined
  file:
    path: "{{ dp__nginx_config_dir }}"
    state: directory
  when: dp__upstream |selectattr("is_container", "equalto", true)

- name: Copy nginx config file
  include: copy_nginx_conf.yml
  with_items: "{{ dp__upstream }}"
  loop_control:
    loop_var: upstream

- name: Proxy non-docker webservers (Let's Encrypt enabled)
  docker_container:
    image: nginx
    name: "nginx-{{ item.svc_name }}"
    env:
      VIRTUAL_HOST: "{{ item.vhost }}"
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: "{{ item.vhost  }}"
      LETSENCRYPT_EMAIL: "{{ dp__le_email }}"
      LETSENCRYPT_TEST: "{{ dp__le_test }}"
    networks:
      - name: "{{ dp__network_name }}"
    volumes:
      - "{{ dp__nginx_config_dir }}/{{ item.svc_name }}.conf:/etc/nginx/conf.d/default.conf:ro"
    restart_policy: always
  with_items: "{{ dp__upstream }}"
  loop_control:
    label: "{{ item.svc_name }}"
  when: not item.is_container and dp__le_enable

- name: Proxy non-docker webservers (Let's Encrypt disabled)
  docker_container:
    image: nginx
    name: "nginx-{{ item.svc_name }}"
    env:
      VIRTUAL_HOST: "{{ item.vhost }}"
      VIRTUAL_PORT: 80
    networks:
      - name: "{{ dp__network_name }}"
    volumes:
      - "{{ dp__nginx_config_dir }}/{{ item.svc_name }}.conf:/etc/nginx/conf.d/default.conf:ro"
    restart_policy: always
  with_items: "{{ dp__upstream }}"
  loop_control:
    label: "{{ item.svc_name }}"
  when: not item.is_container and not dp__le_enable
